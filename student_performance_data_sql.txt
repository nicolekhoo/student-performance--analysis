Task 1: 
- Show the number of students within specific study time groups. 
- Order the list by study time group descending. 
- A study time group is defined as the following. For example, if a student studies between 0-4 hours weekly, they are placed in the 0 hour group. If a student studies 5-9 hours weekly, they are placed in the 5 hour group. Etc.

SELECT 
StudyTimeWeekly - StudyTimeWeekly%5 AS StudyTimeGroup,
COUNT(*) AS num_student

FROM student_performance_data

GROUP BY StudyTimeGroup

ORDER BY StudyTimeGroup DESC


Task 2:
- Show StudentId, StudyTimeWeekly, Extracurricular, GradeClass, high_achiever from the student_performance_data table
- Display high_achiever as a boolean 0 or 1
- Sort the table such that it shows the high achievers first
- A high achiever is defined as student who have a weekly study time of 15 hours or more, participates in extracurricular activites, and have a grade class of A.

SELECT 
StudentId, 
StudyTimeWeekly, 
Extracurricular, 
GradeClass,
CASE

WHEN (StudyTimeWeekly > 15.0 AND Extracurricular = 1 AND GradeClass = 0) 
THEN 1
ELSE 0
END AS high_achiever

FROM student_performance_data

ORDER BY high_achiever DESC


- Task 3: Students who achieve a grade class of A or B are awarded a $20 book voucher. Students who achieve a grade class of C and below are awarded a $10 voucher.
- Assign each student "group 1" if they are awarded a $20 voucher, and "group 2" if they are awarded a $10 voucher. 
- add up the total voucher costs for each group

SELECT 
voucher_status, 
SUM(voucher_cost) AS total_coucher_cost

FROM (SELECT
	CASE
		WHEN GradeClass IN (0,1) THEN "group 1"
		WHEN GradeClass IN (2,3,4) THEN "group 2"
	END AS voucher_status,
	CASE
		WHEN GradeClass IN (0,1) THEN 20
		WHEN GradeClass IN (2,3,4) THEN 10
	END AS voucher_cost

FROM student_performance_data) as A

GROUP BY voucher_status